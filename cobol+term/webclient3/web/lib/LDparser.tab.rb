#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.8
# from Racc grammer file "".
#

require 'racc/parser.rb'


  Reserved = %w|
    { } ; name handler class serialize start coding encoding loadpath
    multiplex_group bind home arraysize textsize cache data spa window
    db
  |

class LDParser < Racc::Parser

module_eval(<<'...end LDparser.y/module_eval...', 'LDparser.y', 129)

  def initialize
    @yydebug = true
  end

  def parse_file(f)
    @f = f
    @line_no = 0
    @line = ""
    do_parse
  end

  def next_token
    loop do
      @line = fetch_line(@line)
      unless @line
        return [false, :END_OF_FILE]
      end

      token = case @line
      when /\A\s+/
        nil
      when /\A\d+/
        [:INTEGER,$&.to_i]
      when %r!\A"(.*?)"!
        s = $1
        [:STRING,s]
      when %r!\A\w+!
        s = $&
        Reserved.index(s) ? [s,s] : [:NAME,s]
      when /\A./
        s=$&
        [s,s]
      end
      
      @line = $'
      return token if token
    end
  end

  def on_error(t,val,vstack)
    raise ParseError, "\nunexpected token #{t} #{val.inspect} #{vstack}"
  end

  def fetch_line(line)
    if line.empty?
      line=@f.gets
      @line_no += 1 if line
    end
    line
  end

...end LDparser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    33,    82,     5,    82,    82,    12,    82,    41,    43,    81,
    58,    81,    81,    37,    81,     9,    11,    14,    17,    20,
    38,    23,     1,     3,     5,    35,     8,    12,    87,    66,
    68,    70,    74,    63,    64,    65,    94,     9,    11,    14,
    17,    20,    44,    23,     1,     3,    41,    43,     8,    66,
    68,    70,    45,    63,    64,    65,    46,    47,    48,    49,
    50,    51,    52,    53,    54,    32,    56,    57,    36,    62,
    31,    71,    72,    73,    74,    77,    78,    58,    80,    30,
    29,    85,    28,    27,    26,    90,    91,    92,    25,    95,
    96,    97,    98,    99,   100,   101,   102,   103 ]

racc_action_check = [
    16,    68,    16,    63,    66,    16,    64,    40,    40,    68,
    45,    63,    66,    23,    64,    16,    16,    16,    16,    16,
    25,    16,    16,    16,     0,    17,    16,     0,    67,    67,
    67,    67,    75,    67,    67,    67,    75,     0,     0,     0,
     0,     0,    27,     0,     0,     0,    26,    26,     0,    48,
    48,    48,    28,    48,    48,    48,    29,    30,    31,    32,
    33,    35,    36,    37,    39,    14,    41,    43,    20,    47,
    12,    49,    54,    56,    57,    58,    59,    60,    62,    11,
     9,    65,     8,     5,     3,    70,    71,    74,     1,    78,
    83,    84,    85,    86,    87,    89,    90,    94 ]

racc_action_pointer = [
    22,    68,   nil,    78,   nil,    80,   nil,   nil,    71,    77,
   nil,    68,    67,   nil,    54,   nil,     0,    14,   nil,   nil,
    48,   nil,   nil,    -7,   nil,    16,    22,    38,    46,    52,
    46,    52,    48,    60,   nil,    57,    58,    59,   nil,    57,
   -17,    63,   nil,    61,   nil,     7,   nil,    58,    41,    60,
   nil,   nil,   nil,   nil,    68,   nil,    69,    71,    71,    69,
    74,   nil,    74,     0,     3,    70,     1,    21,    -2,   nil,
    74,    82,   nil,   nil,    83,    29,   nil,   nil,    85,   nil,
   nil,   nil,   nil,    86,    87,    88,    89,    90,   nil,    91,
    92,   nil,   nil,   nil,    93,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil ]

racc_action_default = [
   -49,   -49,    -6,   -49,    -7,   -49,    -8,    -9,   -49,   -49,
   -10,   -49,   -49,   -11,   -49,   -12,   -49,   -49,   -13,    -1,
   -49,    -3,    -4,   -49,    -5,   -49,   -34,   -49,   -49,   -49,
   -49,   -49,   -49,   -49,    -2,   -49,   -49,   -49,   -32,   -49,
   -35,   -49,   -36,   -49,   -14,   -44,   -26,   -49,   -49,   -49,
   104,   -29,   -30,   -31,   -49,   -37,   -49,   -49,   -49,   -49,
   -45,   -46,   -49,   -49,   -49,   -49,   -49,   -49,   -49,   -16,
   -49,   -49,   -33,   -38,   -49,   -49,   -40,   -48,   -49,   -47,
   -27,   -24,   -25,   -49,   -49,   -49,   -49,   -49,   -17,   -49,
   -49,   -28,   -42,   -41,   -49,   -43,   -21,   -22,   -23,   -18,
   -15,   -19,   -20,   -39 ]

racc_goto_table = [
    69,    19,    76,    61,    40,    83,    84,    42,    86,    39,
    89,    75,    67,    59,    60,    16,   nil,    34,    79,    88,
    93,    55 ]

racc_goto_check = [
    15,     2,    21,    24,    18,    16,    16,    19,    16,    17,
    16,    20,    14,    22,    23,     1,   nil,     2,    24,    15,
    21,    19 ]

racc_goto_pointer = [
   nil,    15,     1,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   -36,   -48,   -58,   -17,   -22,   -19,
   -46,   -55,   -32,   -31,   -42 ]

racc_goto_default = [
   nil,   nil,   nil,    21,    22,    24,     2,     4,     6,     7,
    10,    13,    15,    18,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 28, :_reduce_1,
  2, 28, :_reduce_2,
  1, 29, :_reduce_3,
  1, 29, :_reduce_4,
  1, 29, :_reduce_5,
  1, 29, :_reduce_6,
  1, 29, :_reduce_7,
  1, 29, :_reduce_8,
  1, 29, :_reduce_9,
  1, 29, :_reduce_10,
  1, 29, :_reduce_11,
  1, 29, :_reduce_12,
  1, 29, :_reduce_13,
  3, 30, :_reduce_14,
  6, 39, :_reduce_15,
  1, 41, :_reduce_16,
  2, 41, :_reduce_17,
  3, 42, :_reduce_18,
  3, 42, :_reduce_19,
  3, 42, :_reduce_20,
  3, 42, :_reduce_21,
  3, 42, :_reduce_22,
  3, 42, :_reduce_23,
  1, 43, :_reduce_24,
  1, 43, :_reduce_25,
  3, 31, :_reduce_26,
  5, 37, :_reduce_27,
  5, 38, :_reduce_28,
  3, 35, :_reduce_29,
  3, 33, :_reduce_30,
  3, 34, :_reduce_31,
  3, 32, :_reduce_32,
  5, 36, :_reduce_33,
  0, 44, :_reduce_34,
  1, 44, :_reduce_35,
  1, 45, :_reduce_36,
  2, 45, :_reduce_37,
  3, 46, :_reduce_38,
  5, 46, :_reduce_39,
  1, 47, :_reduce_40,
  2, 47, :_reduce_41,
  2, 48, :_reduce_42,
  6, 40, :_reduce_43,
  0, 49, :_reduce_44,
  1, 49, :_reduce_45,
  1, 50, :_reduce_46,
  2, 50, :_reduce_47,
  2, 51, :_reduce_48 ]

racc_reduce_n = 49

racc_shift_n = 104

racc_token_table = {
  false => 0,
  :error => 1,
  "name" => 2,
  :NAME => 3,
  ";" => 4,
  "handler" => 5,
  "{" => 6,
  "}" => 7,
  "class" => 8,
  "serialize" => 9,
  "start" => 10,
  :STRING => 11,
  "coding" => 12,
  "endcoding" => 13,
  "loadpath" => 14,
  "multiplex_group" => 15,
  "bind" => 16,
  "bindapi" => 17,
  "home" => 18,
  "arraysize" => 19,
  :INTEGER => 20,
  "textsize" => 21,
  "cache" => 22,
  "data" => 23,
  "spa" => 24,
  "window" => 25,
  "db" => 26 }

racc_nt_base = 27

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"name\"",
  "NAME",
  "\";\"",
  "\"handler\"",
  "\"{\"",
  "\"}\"",
  "\"class\"",
  "\"serialize\"",
  "\"start\"",
  "STRING",
  "\"coding\"",
  "\"endcoding\"",
  "\"loadpath\"",
  "\"multiplex_group\"",
  "\"bind\"",
  "\"bindapi\"",
  "\"home\"",
  "\"arraysize\"",
  "INTEGER",
  "\"textsize\"",
  "\"cache\"",
  "\"data\"",
  "\"spa\"",
  "\"window\"",
  "\"db\"",
  "$start",
  "ld_def",
  "topdef",
  "ld_name",
  "multiplex_group",
  "cache_num",
  "arraysize",
  "textsize",
  "homedir",
  "dc",
  "bind",
  "bindapi",
  "handler",
  "dbg_decl",
  "handler_def_list",
  "handler_def",
  "name_or_string",
  "spa_window_list_opt",
  "spa_window_list",
  "spa_window",
  "window_list",
  "window",
  "db_list_opt",
  "db_list",
  "db" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'LDparser.y', 9)
  def _reduce_1(val, _values)
    val[0]
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 12)
  def _reduce_2(val, _values)
          type = val[1][:type]
      if type && val[0][type]
        val[0][type] << val[1][type]
        val[0][type].flatten!
      else
        val[0].merge! val[1]
      end
      val[0]
    
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 23)
  def _reduce_3(val, _values)
    {:name=>val[0]}
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 24)
  def _reduce_4(val, _values)
    {:multiplex=>val[0]}
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 25)
  def _reduce_5(val, _values)
    {:cache_num=>val[0]}
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 26)
  def _reduce_6(val, _values)
    {:arraysize=>val[0]}
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 27)
  def _reduce_7(val, _values)
    {:textsize=>val[0]}
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 28)
  def _reduce_8(val, _values)
    {:homedir=>val[0]}
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 29)
  def _reduce_9(val, _values)
    {:dc=>val[0]}
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 30)
  def _reduce_10(val, _values)
    {:binds=>[val[0]],:type=>:binds}
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 31)
  def _reduce_11(val, _values)
    {:bindapis=>[val[0]],:type=>:bindapis}
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 32)
  def _reduce_12(val, _values)
    {:handlers=>[val[0]],:type=>:handlers}
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 33)
  def _reduce_13(val, _values)
    {:dbgs=>[val[0]],:type=>:dbgs}
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 36)
  def _reduce_14(val, _values)
    val[1]
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 40)
  def _reduce_15(val, _values)
    val[3][:name] = val[1]
   val[3]
  
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 45)
  def _reduce_16(val, _values)
    val[0]
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 46)
  def _reduce_17(val, _values)
    val[0].merge! val[1]
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 49)
  def _reduce_18(val, _values)
    {:class=>val[1]}
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 50)
  def _reduce_19(val, _values)
    {:serialize=>val[1]}
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 51)
  def _reduce_20(val, _values)
    {:start=>val[1]}
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 52)
  def _reduce_21(val, _values)
    {:coding=>val[1]}
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 53)
  def _reduce_22(val, _values)
    {:encoding=>val[1]}
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 54)
  def _reduce_23(val, _values)
    {:loadpath=>val[1]}
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 57)
  def _reduce_24(val, _values)
    val[0]
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 58)
  def _reduce_25(val, _values)
    val[0]
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 61)
  def _reduce_26(val, _values)
    val[1]
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 64)
  def _reduce_27(val, _values)
    {:window=>val[1],:handler=>val[2],:module=>val[3]}
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 67)
  def _reduce_28(val, _values)
    {:window=>val[1],:handler=>val[2],:module=>val[3]}
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 71)
  def _reduce_29(val, _values)
    val[1]
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 74)
  def _reduce_30(val, _values)
    val[1]
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 77)
  def _reduce_31(val, _values)
    val[1]
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 80)
  def _reduce_32(val, _values)
    val[1]
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 83)
  def _reduce_33(val, _values)
    val[2]
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 86)
  def _reduce_34(val, _values)
    {}
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 87)
  def _reduce_35(val, _values)
    val[0]
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 90)
  def _reduce_36(val, _values)
    val[0]
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 91)
  def _reduce_37(val, _values)
    val[0].merge! val[1]
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 94)
  def _reduce_38(val, _values)
    {:spa=>val[1]}
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 95)
  def _reduce_39(val, _values)
    {:window=>val[2]}
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 98)
  def _reduce_40(val, _values)
    val
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 99)
  def _reduce_41(val, _values)
    val[0] << val[1]
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 102)
  def _reduce_42(val, _values)
    val[0]
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 105)
  def _reduce_43(val, _values)
    {:name=>val[1],:db_list=>val[3]}
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 108)
  def _reduce_44(val, _values)
    []
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 109)
  def _reduce_45(val, _values)
    val[0]
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 112)
  def _reduce_46(val, _values)
    val
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 113)
  def _reduce_47(val, _values)
    val[0] << val[1]
  end
.,.,

module_eval(<<'.,.,', 'LDparser.y', 116)
  def _reduce_48(val, _values)
    val[0]
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class LDParser


if $0 == __FILE__
  parser = LDParser.new
  p parser.parse_file(ARGF)
end
